// Firestore rules for KitchenSink application
// Updated to work with existing rules structure

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read/write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow subcollections access
      match /{collection}/{document=**} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Recipe feedback rules
    match /recipe_feedback/{feedbackId} {
      // Anyone can read feedback (for aggregation purposes)
      allow read: if request.auth != null;
      
      // Users can only write their own feedback
      // The document ID follows pattern: {recipeId}_{userId} or is a placeholder
      allow create, update: if request.auth != null && 
        (
          feedbackId == "_placeholder" ||
          (feedbackId.split('_').size() > 1 && 
           feedbackId.split('_')[1] == request.auth.uid &&
           request.resource.data.userId == request.auth.uid)
        );
      
      // Only creator can delete feedback
      allow delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Recipes collection
    match /recipes/{recipeId} {
      // Anyone can read recipes
      allow read: if request.auth != null;
      
      // Only the creator can create/update recipes
      allow create, update: if request.auth != null && 
        (resource == null || resource.data.userId == request.auth.uid);
      
      // Only the creator can delete recipes
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Pantry items collection
    match /pantry_items/{itemId} {
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      allow write: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Grocery lists collection
    match /grocery_lists/{listId} {
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      allow write: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 